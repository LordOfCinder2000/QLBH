<UserControl x:Class="QLBH.UserControlQ.ControlBarUC"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:QLBH.UserControlQ" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             DataContext="{StaticResource ControlBarVM}"
             Name="ucControlBar"
             d:DesignHeight="450" d:DesignWidth="800">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="MouseLeftButtonDown">
            <i:InvokeCommandAction 
                Command="{Binding MouseMoveWindowCommand}"
                CommandParameter="{Binding ElementName=ucControlBar}"
             />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <materialDesign:ColorZone Mode="Accent">
            <DockPanel >
                <Image Source="/Images/iphone-64.ico" Margin="20 0 0 0" Width="20"/>
                <StackPanel DockPanel.Dock="Right" Background="Transparent" Orientation="Horizontal">
                    <StackPanel.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Margin" Value="1 1 1 1"></Setter>
                            <Setter Property="Width" Value="50"></Setter>

                            <!--<Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border x:Name="Border" Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="#FFAEEA00" TargetName="Border" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>-->
                        </Style>
                    </StackPanel.Resources>
                    <Button
                        x:Name="MinimizeButton"
                        ToolTip="Minimize"
                        BorderBrush="Green"
                        Background="Green"
                        Content="{materialDesign:PackIcon Kind=WindowMinimize}" 
                        Command="{Binding MinimizeWindowCommand}"
                        CommandParameter="{Binding ElementName=ucControlBar}">
                        
                    </Button>
                    <Button
                            x:Name="SizeButton"
                            BorderBrush="Green"
                            Background="Green"
                            Content="{Binding KindIcon,UpdateSourceTrigger=PropertyChanged}" 
                            Command="{Binding MaximizeWindowCommand}"
                            CommandParameter="{Binding ElementName=ucControlBar}"
                        >
                        <!--<i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseEnter">
                                <i:InvokeCommandAction 
                                    Command="{Binding MouseEnterWindowCommand}"
                                    CommandParameter="{Binding ElementName=SizeButton}"
                                />     
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseLeave">
                                <i:InvokeCommandAction 
                                    Command="{Binding MouseLeaveWindowCommand}"
                                    CommandParameter="{Binding ElementName=SizeButton}"
                                />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>-->
                    </Button>
                    <Button
                            x:Name="CloseButton"
                            ToolTip="Close"
                            BorderBrush="OrangeRed"
                            Background="OrangeRed"
                            Content="{materialDesign:PackIcon Kind=WindowClose}" 
                            Command="{Binding CloseWindowCommand}"
                            CommandParameter="{Binding ElementName=ucControlBar}"
                        >
                       
                        <!--<i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseEnter">
                                <i:InvokeCommandAction 
                                    Command="{Binding MouseEnterWindowCommand}"
                                    CommandParameter="{Binding ElementName=CloseButton}"
                                />     
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseLeave">
                                <i:InvokeCommandAction 
                                    Command="{Binding MouseLeaveWindowCommand}"
                                    CommandParameter="{Binding ElementName=CloseButton}"
                                />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>-->
                    </Button>
                </StackPanel>
                <StackPanel DockPanel.Dock="Left" Height="35" Orientation="Horizontal">
                    <!--<ToggleButton
                         Style="{DynamicResource MaterialDesignHamburgerToggleButton}" />-->
                    <TextBlock
                            VerticalAlignment="Center"
                            Margin="16 0 0 0"
                            Text="{Binding Tag,ElementName=ucControlBar}" HorizontalAlignment="Center">
                    </TextBlock>
                </StackPanel>
            </DockPanel>
        </materialDesign:ColorZone>
    </Grid>
</UserControl>
